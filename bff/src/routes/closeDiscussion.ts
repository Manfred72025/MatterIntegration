import { Router } from 'express';
import { config } from '../config';
import { mattermostMessageLogger } from '../loggers';

const router = Router();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –∑–∞–∫—Ä—ã—Ç–∏—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è
function verifyMattermostToken(token: string): boolean {
  return token === config.COMAND_CLOSE_DISCUSSION_TOKEN;
}

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è
function logDiscussionClosure(user_id: string, channel_id: string, channel_name: string, text: string) {
  // –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
  console.log('Discussion closed:', { user_id, channel_id, channel_name, text });
  // –õ–æ–≥ –≤ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ –ª–æ–≥–≥–µ—Ä
  mattermostMessageLogger.info({
    type: 'discussion_closed',
    user_id,
    channel_id,
    channel_name,
    text,
    timestamp: new Date().toISOString(),
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /closeDiscussion
router.post('/mattermost/close-discussion', async (req, res) => {
  try {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ Mattermost
    const {
      token,           // –¢–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏
      team_id,         // ID –∫–æ–º–∞–Ω–¥—ã
      team_domain,     // –î–æ–º–µ–Ω –∫–æ–º–∞–Ω–¥—ã
      channel_id,      // ID –∫–∞–Ω–∞–ª–∞
      channel_name,    // –ò–º—è –∫–∞–Ω–∞–ª–∞
      user_id,         // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      user_name,       // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      command,         // –°–∞–º–∞ –∫–æ–º–∞–Ω–¥–∞ (/closeDiscussion)
      text,            // –¢–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
      response_url,    // URL –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
      trigger_id       // ID –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    } = req.body;

    console.log('Received close discussion command:', {
      user_name,
      channel_name,
      text: text || '(no additional text)'
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
    if (config.COMAND_CLOSE_DISCUSSION_TOKEN !== '' && !verifyMattermostToken(token)) {
      return res.status(401).json({
        response_type: 'ephemeral',
        text: 'Unauthorized request'
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–∏–º–µ—Ä) //, "manfred7"
    const allowedUsers = ['admin', 'moderator', 'manfred7']; // –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!allowedUsers.includes(user_name) && !(text && text.includes('force'))) {
      return res.json({
        response_type: 'ephemeral',
        text: '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏—Å–∫—É—Å—Å–∏–∏. –¢–æ–ª—å–∫–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.'
      });
    }

    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –¥–∏—Å–∫—É—Å—Å–∏–∏
    logDiscussionClosure(user_id, channel_id, channel_name, text);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏—á–∏–Ω—É –∑–∞–∫—Ä—ã—Ç–∏—è
    const reason = text ? text.trim() : '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    const responseText = `### üîí –î–∏—Å–∫—É—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞\n\n` +
      `**–ó–∞–∫—Ä—ã—Ç–∞:** @${user_name}\n` +
      `**–í—Ä–µ–º—è:** ${new Date().toLocaleString('ru-RU')}\n` +
      `**–ü—Ä–∏—á–∏–Ω–∞:** ${reason}\n\n` +
      `_–î–∞–ª—å–Ω–µ–π—à–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —ç—Ç–æ–π –¥–∏—Å–∫—É—Å—Å–∏–∏ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç—Å—è._`;

    // –°–æ–∑–¥–∞–µ–º attachments –¥–ª—è –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const response = {
      response_type: 'in_channel', // –û—Ç–≤–µ—Ç –≤–∏–¥–µ–Ω –≤—Å–µ–º –≤ –∫–∞–Ω–∞–ª–µ
      text: responseText,
      attachments: [
        {
          color: '#ff6b6b', // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è
          fields: [
            {
              title: '–°—Ç–∞—Ç—É—Å',
              value: '–ó–∞–∫—Ä—ã—Ç–∞',
              short: true
            },
            {
              title: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä',
              value: `@${user_name}`,
              short: true
            }
          ],
          footer: 'Discussion Management Bot',
          ts: Math.floor(Date.now() / 1000)
        }
      ]
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    res.json(response);

    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ webhook
    // await sendDelayedNotification(response_url, channel_id, user_name);

  } catch (error) {
    console.error('Error processing close discussion command:', error);
    mattermostMessageLogger.error({
      message: 'Error processing close discussion command',
      error: error instanceof Error ? error.message : error,
      stack: error instanceof Error ? error.stack : undefined,
      timestamp: new Date().toISOString(),
    });
    res.json({
      response_type: 'ephemeral',
      text: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    });
  }
});

export default router; 